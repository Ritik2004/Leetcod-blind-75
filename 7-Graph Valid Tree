import java.util.* ;
import java.io.*; 
public class Solution {
    public static Boolean cycle(int ind,int visit[],ArrayList<ArrayList<Integer>>ans,int parent){
        visit[ind] = 1;
        for(int it:ans.get(ind))
        {
            if(visit[it]==0)
            {
               if(cycle(it,visit,ans,ind))
               {
                    return true;
               }
            }
            else if(it!=parent){
                return true;
            }
        }
        return false;
    }
    public static Boolean checkGraph(int[][] edges, int n, int m) {
        // Write your code here
     ArrayList<ArrayList<Integer>>ans = new ArrayList<>();
     for(int i=0;i<n;i++){
         ans.add(new ArrayList<>());
     }
     for(int i=0;i<m;i++){
         ans.get(edges[i][0]).add(edges[i][1]);
         ans.get(edges[i][1]).add(edges[i][0]);
     }
     int count = 0;
     int visit[] = new int[n];
     if(cycle(0,visit,ans,-1)){
         return false;
     }
     for(int i=0;i<n;i++){
         if(visit[i]==0){
              return false;
         }
     }
     return true;
    }
}
